name: Build Distributions

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  build-apple:
    name: Build macOS (Apple Silicon)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure Node caching
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test
        timeout-minutes: 5

      - name: Build distribution (macOS Apple Silicon)
        env:
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npm run build:mac -- --publish always

      - name: Create README
        run: |
          echo "More information: https://github.com/jeremybmerrill/meaningfully" > dist/README.txt

      - name: Upload artifact (macOS Apple Silicon)
        uses: actions/upload-artifact@v4
        with:
          name: meaningfully-macOS
          path: |
            dist/meaningfully-${{ github.ref_name }}.dmg
            dist/README.txt

  build-intel:
    name: Build macOS (Intel)
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4

      - name: Configure Node caching
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-

      - name: Install dependencies
        run: brew install pkg-config cairo pango libjpeg giflib librsvg && npm install

      - name: Run tests
        run: npm test
        timeout-minutes: 5

      - name: Build distribution (macOS Intel)
        env:
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npm run build:mac -- --publish always

      - name: Create README
        run: 'echo "More information: https://github.com/jeremybmerrill/meaningfully" > dist/README.txt'

      - name: Upload artifact (macOS Intel)
        uses: actions/upload-artifact@v4
        with:
          name: meaningfully-macOS-intel
          path: |
            dist/meaningfully-${{ github.ref_name }}.intel.dmg
            dist/README.txt

  build-windows:
    name: Build Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure Node caching
        uses: actions/cache@v4
        with:
          # On Windows, adjust the cache path according to your Node setup.
          path: ~\AppData\Local\npm-cache
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test
        timeout-minutes: 5

      - name: Build distribution (Windows)
        env:
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npm run build:win -- --publish always

      - name: Create README
        run: 'echo "More information: https://github.com/jeremybmerrill/meaningfully" > dist\README.txt'

      - name: Upload artifact (Windows)
        uses: actions/upload-artifact@v4
        with:
          name: meaningfully-windows
          path: |
            dist/meaningfully-${{ github.ref_name }}.exe
            dist/meaningfully-${{ github.ref_name }}-portable.exe
            dist\README.txt

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure Node caching
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-

      - name: Install dependencies
        run: sudo apt-get install -y build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev && npm install

      - name: Run tests
        run: npm test
        timeout-minutes: 5

      - name: Build distribution (Linux)
        env:
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npm run build:linux -- --publish always

      - name: Create README
        run: 'echo "More information: https://github.com/jeremybmerrill/meaningfully" > dist/README.txt'

      - name: Upload artifact (Linux)
        uses: actions/upload-artifact@v4
        with:
          name: meaningfully-linux
          path: |
            dist/meaningfully-${{ github.ref_name }}.deb
            dist/meaningfully-${{ github.ref_name }}.snap
            dist/meaningfully-${{ github.ref_name }}.AppImage
            dist/README.txt